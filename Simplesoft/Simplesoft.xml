<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Simplesoft</name>
    </assembly>
    <members>
        <member name="T:Simplesoft.ArrayExtension">
            <summary>
            Provides extended functional for <see cref="T:System.Array"/> objects.
            </summary>
        </member>
        <member name="T:Simplesoft.ArrayExtension.EnsureLengthExceptions">
            <summary>
            Provides exceptions for <see cref="M:Simplesoft.ArrayExtension.EnsureLength``1(``0[]@,Simplesoft.NonNegativeInteger)"/> method.
            </summary>
        </member>
        <member name="T:Simplesoft.ArrayExtension.EnsureLengthExceptions.DesiredLengthInvalidException">
            <summary>
            Represents the exception that is thrown when the desiredLength argument value is greater than <see cref="F:Simplesoft.ArrayExtension.MaxArrayLength"/>.
            </summary>
        </member>
        <member name="F:Simplesoft.ArrayExtension.MaxArrayLength">
            <summary>
            The maximum array length.
            </summary>
        </member>
        <member name="M:Simplesoft.ArrayExtension.EnsureLength``1(``0[]@,Simplesoft.NonNegativeInteger)">
            <summary>
            Initializes an <see cref="T:System.Array"/> by a desired length if the <see cref="T:System.Array"/> is <see langword="null"/>; otherwise, doubles the length of the <see cref="T:System.Array"/> while the length is less than the desired length.
            </summary>
            <param name="array">The <see cref="T:System.Array"/> which length is to be ensured.</param>
            <param name="desiredLength">The desired length of the <see cref="T:System.Array"/>.</param>
            <exception cref="T:Simplesoft.ArrayExtension.EnsureLengthExceptions.DesiredLengthInvalidException"/>
        </member>
        <member name="T:Simplesoft.IntegerInterval">
            <summary>
            Represents an interval defined by two 64-bit signed integers.
            </summary>
        </member>
        <member name="T:Simplesoft.IntegerInterval.ConstructorExceptions">
            <summary>
            Provides exceptions for <see cref="T:Simplesoft.IntegerInterval"/> constructors.
            </summary>
        </member>
        <member name="T:Simplesoft.IntegerInterval.ConstructorExceptions.MinMaxInvalidException">
            <summary>
            Represents the exception that is thrown when the min argument value is less than the max argument value.
            </summary>
        </member>
        <member name="M:Simplesoft.IntegerInterval.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes the <see cref="T:Simplesoft.IntegerInterval"/>
            </summary>
            <param name="min">The left bound of the <see cref="T:Simplesoft.IntegerInterval"/>.</param>
            <param name="max">The right bound of the <see cref="T:Simplesoft.IntegerInterval"/>.</param>
            <exception cref="T:Simplesoft.IntegerInterval.ConstructorExceptions.MinMaxInvalidException"/>
        </member>
        <member name="P:Simplesoft.IntegerInterval.Min">
            <summary>
            Gets the left bound of the <see cref="T:Simplesoft.IntegerInterval"/>.
            </summary>
        </member>
        <member name="P:Simplesoft.IntegerInterval.Max">
            <summary>
            Gets the right bound of the <see cref="T:Simplesoft.IntegerInterval"/>.
            </summary>
        </member>
        <member name="T:Simplesoft.NonNegativeInteger">
            <summary>
            Represents a non-negative 64-bit signed integer.
            </summary>
        </member>
        <member name="T:Simplesoft.NonNegativeInteger.ImplicitOperatorExceptions">
            <summary>
            Provides exceptions for <see cref="T:Simplesoft.NonNegativeInteger"/> implicit operators.
            </summary>
        </member>
        <member name="T:Simplesoft.NonNegativeInteger.ImplicitOperatorExceptions.ValueInvalidException">
            <summary>
            Represents the exception that is thrown when the value argument value is less than 0.
            </summary>
        </member>
        <member name="M:Simplesoft.NonNegativeInteger.op_Implicit(System.Int64)~Simplesoft.NonNegativeInteger">
            <summary>
            Converts an <see cref="T:System.Int64"/> to a <see cref="T:Simplesoft.NonNegativeInteger"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/>.</param>
            <exception cref="T:Simplesoft.NonNegativeInteger.ImplicitOperatorExceptions.ValueInvalidException"/>
        </member>
        <member name="M:Simplesoft.NonNegativeInteger.op_Implicit(Simplesoft.NonNegativeInteger)~System.Int64">
            <summary>
            Converts a <see cref="T:Simplesoft.NonNegativeInteger"/> to an <see cref="T:System.Int64"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.NonNegativeInteger"/>.</param>
        </member>
        <member name="M:Simplesoft.NonNegativeInteger.op_UnaryNegation(Simplesoft.NonNegativeInteger)">
            <summary>
            Inverts a <see cref="T:Simplesoft.NonNegativeInteger"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.NonNegativeInteger"/>.</param>
            <returns>An additive inverse of <paramref name="value"/>.</returns>
        </member>
        <member name="T:Simplesoft.NonNegativeIntegerInterval">
            <summary>
            Represents an interval defined by two 64-bit signed integers whose values are non-negative.
            </summary>
        </member>
        <member name="T:Simplesoft.NonNegativeIntegerInterval.ConstructorExceptions">
            <summary>
            Provides exceptions for <see cref="T:Simplesoft.NonNegativeIntegerInterval"/> constructors.
            </summary>
        </member>
        <member name="T:Simplesoft.NonNegativeIntegerInterval.ConstructorExceptions.MinInvalidException">
            <summary>
            Represents the exception that is thrown when the min argument value is less than 0.
            </summary>
        </member>
        <member name="T:Simplesoft.NonNegativeIntegerInterval.ConstructorExceptions.MinMaxInvalidException">
            <summary>
            Represents the exception that is thrown when the min argument value is less than the max argument value.
            </summary>
        </member>
        <member name="T:Simplesoft.NonNegativeIntegerInterval.ImplicitOperatorExceptions">
            <summary>
            Provides exceptions for <see cref="T:Simplesoft.NonNegativeIntegerInterval"/> implicit operators.
            </summary>
        </member>
        <member name="T:Simplesoft.NonNegativeIntegerInterval.ImplicitOperatorExceptions.MinInvalidException">
            <summary>
            Represents the exception that is thrown when the left bound of the interval argument value is less than 0.
            </summary>
        </member>
        <member name="M:Simplesoft.NonNegativeIntegerInterval.op_Implicit(Simplesoft.IntegerInterval)~Simplesoft.NonNegativeIntegerInterval">
            <summary>
            Converts an <see cref="T:Simplesoft.IntegerInterval"/> to a <see cref="T:Simplesoft.NonNegativeIntegerInterval"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.IntegerInterval"/>.</param>
            <exception cref="T:Simplesoft.NonNegativeIntegerInterval.ImplicitOperatorExceptions.MinInvalidException"/>
        </member>
        <member name="M:Simplesoft.NonNegativeIntegerInterval.op_Implicit(Simplesoft.NonNegativeIntegerInterval)~Simplesoft.IntegerInterval">
            <summary>
            Converts a <see cref="T:Simplesoft.NonNegativeIntegerInterval"/> to an <see cref="T:Simplesoft.IntegerInterval"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.NonNegativeIntegerInterval"/>.</param>
        </member>
        <member name="M:Simplesoft.NonNegativeIntegerInterval.op_UnaryNegation(Simplesoft.NonNegativeIntegerInterval)">
            <summary>
            Inverts a <see cref="T:Simplesoft.NonNegativeIntegerInterval"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.NonNegativeIntegerInterval"/>.</param>
            <returns>A symmetric <see cref="T:Simplesoft.NonPositiveIntegerInterval"/> of <paramref name="value"/>.</returns>
        </member>
        <member name="M:Simplesoft.NonNegativeIntegerInterval.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes the <see cref="T:Simplesoft.NonNegativeIntegerInterval"/>
            </summary>
            <param name="min">The left bound of the <see cref="T:Simplesoft.NonNegativeIntegerInterval"/>.</param>
            <param name="max">The right bound of the <see cref="T:Simplesoft.NonNegativeIntegerInterval"/>.</param>
            <exception cref="T:Simplesoft.NonNegativeIntegerInterval.ConstructorExceptions.MinInvalidException"/>
            <exception cref="T:Simplesoft.NonNegativeIntegerInterval.ConstructorExceptions.MinMaxInvalidException"/>
        </member>
        <member name="P:Simplesoft.NonNegativeIntegerInterval.Min">
            <summary>
            Gets the left bound of the <see cref="T:Simplesoft.NonNegativeIntegerInterval"/>.
            </summary>
        </member>
        <member name="P:Simplesoft.NonNegativeIntegerInterval.Max">
            <summary>
            Gets the right bound of the <see cref="T:Simplesoft.NonNegativeIntegerInterval"/>.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveInteger">
            <summary>
            Represents a non-positive 64-bit signed integer.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveInteger.ImplicitOperatorExceptions">
            <summary>
            Provides exceptions for <see cref="T:Simplesoft.NonPositiveInteger"/> implicit operators.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveInteger.ImplicitOperatorExceptions.ValueInvalidException">
            <summary>
            Represents the exception that is thrown when the value argument value is greater than 0.
            </summary>
        </member>
        <member name="M:Simplesoft.NonPositiveInteger.op_Implicit(System.Int64)~Simplesoft.NonPositiveInteger">
            <summary>
            Converts an <see cref="T:System.Int64"/> to a <see cref="T:Simplesoft.NonPositiveInteger"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/>.</param>
            <exception cref="T:Simplesoft.NonPositiveInteger.ImplicitOperatorExceptions.ValueInvalidException"/>
        </member>
        <member name="M:Simplesoft.NonPositiveInteger.op_Implicit(Simplesoft.NonPositiveInteger)~System.Int64">
            <summary>
            Converts a <see cref="T:Simplesoft.NonPositiveInteger"/> to an <see cref="T:System.Int64"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.NonPositiveInteger"/>.</param>
        </member>
        <member name="M:Simplesoft.NonPositiveInteger.op_UnaryNegation(Simplesoft.NonPositiveInteger)">
            <summary>
            Inverts a <see cref="T:Simplesoft.NonPositiveInteger"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.NonPositiveInteger"/>.</param>
            <returns>An additive inverse of <paramref name="value"/>.</returns>
        </member>
        <member name="T:Simplesoft.NonPositiveIntegerInterval">
            <summary>
            Represents an interval defined by two 64-bit signed integers whose values are non-positive.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveIntegerInterval.ConstructorExceptions">
            <summary>
            Provides exceptions for <see cref="T:Simplesoft.NonPositiveIntegerInterval"/> constructors.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveIntegerInterval.ConstructorExceptions.MaxInvalidException">
            <summary>
            Represents the exception that is thrown when the max argument value is greater than 0.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveIntegerInterval.ConstructorExceptions.MinMaxInvalidException">
            <summary>
            Represents the exception that is thrown when the min argument value is less than the max argument value.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveIntegerInterval.ImplicitOperatorExceptions">
            <summary>
            Provides exceptions for <see cref="T:Simplesoft.NonPositiveIntegerInterval"/> implicit operators.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveIntegerInterval.ImplicitOperatorExceptions.MaxInvalidException">
            <summary>
            Represents the exception that is thrown when the right bound of the interval argument value is greater than 0.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveIntegerInterval.MinusOperatorExceptions">
            <summary>
            Provides exceptions for <see cref="T:Simplesoft.NonPositiveIntegerInterval"/> minus operator.
            </summary>
        </member>
        <member name="T:Simplesoft.NonPositiveIntegerInterval.MinusOperatorExceptions.MinInvalidException">
            <summary>
            Represents the exception that is thrown when the left bound of the interval argument value equals to <see cref="F:System.Int64.MinValue"/>.
            </summary>
        </member>
        <member name="M:Simplesoft.NonPositiveIntegerInterval.op_Implicit(Simplesoft.IntegerInterval)~Simplesoft.NonPositiveIntegerInterval">
            <summary>
            Converts an <see cref="T:Simplesoft.IntegerInterval"/> to a <see cref="T:Simplesoft.NonPositiveIntegerInterval"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.IntegerInterval"/>.</param>
            <exception cref="T:Simplesoft.NonPositiveIntegerInterval.ImplicitOperatorExceptions.MaxInvalidException"/>
        </member>
        <member name="M:Simplesoft.NonPositiveIntegerInterval.op_Implicit(Simplesoft.NonPositiveIntegerInterval)~Simplesoft.IntegerInterval">
            <summary>
            Converts a <see cref="T:Simplesoft.NonPositiveIntegerInterval"/> to an <see cref="T:Simplesoft.IntegerInterval"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.NonPositiveIntegerInterval"/>.</param>
        </member>
        <member name="M:Simplesoft.NonPositiveIntegerInterval.op_UnaryNegation(Simplesoft.NonPositiveIntegerInterval)">
            <summary>
            Inverts a <see cref="T:Simplesoft.NonPositiveIntegerInterval"/>.
            </summary>
            <param name="value">The <see cref="T:Simplesoft.NonPositiveIntegerInterval"/>.</param>
            <returns>A symmetric <see cref="T:Simplesoft.NonNegativeIntegerInterval"/> of <paramref name="value"/>.</returns>
            <exception cref="T:Simplesoft.NonPositiveIntegerInterval.MinusOperatorExceptions.MinInvalidException"/>
        </member>
        <member name="M:Simplesoft.NonPositiveIntegerInterval.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes the <see cref="T:Simplesoft.NonPositiveIntegerInterval"/>
            </summary>
            <param name="min">The left bound of the <see cref="T:Simplesoft.NonPositiveIntegerInterval"/>.</param>
            <param name="max">The right bound of the <see cref="T:Simplesoft.NonPositiveIntegerInterval"/>.</param>
            <exception cref="T:Simplesoft.NonPositiveIntegerInterval.ConstructorExceptions.MaxInvalidException"/>
            <exception cref="T:Simplesoft.NonPositiveIntegerInterval.ConstructorExceptions.MinMaxInvalidException"/>
        </member>
        <member name="P:Simplesoft.NonPositiveIntegerInterval.Min">
            <summary>
            Gets the left bound of the <see cref="T:Simplesoft.NonPositiveIntegerInterval"/>.
            </summary>
        </member>
        <member name="P:Simplesoft.NonPositiveIntegerInterval.Max">
            <summary>
            Gets the right bound of the <see cref="T:Simplesoft.NonPositiveIntegerInterval"/>.
            </summary>
        </member>
    </members>
</doc>
